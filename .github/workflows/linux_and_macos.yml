# Copyright (c) 2023 Sebastian Pipping <sebastian@pipping.org>
# Licensed under Apache License Version 2.0

name: Build on Linux/macOS

# Drop permissions to minimum, for security
permissions:
  contents: read

on:
  pull_request:
  push:
  schedule:
    - cron: '0 3 * * 5'  # Every Friday at 3am
  workflow_dispatch:

jobs:
  linux:
    name: Build (${{ matrix.cc }} on ${{ matrix.runs-on }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - cc: gcc-13
            cxx: g++-13
            clang_major_version: null
            clang_repo_suffix: null
            runs-on: macos-12
          - cc: clang-15
            cxx: clang++-15
            clang_major_version: 15
            clang_repo_suffix: null
            runs-on: macos-12
    steps:
      - name: Add Clang/LLVM repositories
        if: "${{ runner.os == 'Linux' && contains(matrix.cxx, 'clang') }}"
        run: |-
          set -x
          source /etc/os-release
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/${UBUNTU_CODENAME}/ llvm-toolchain-${UBUNTU_CODENAME}${{ matrix.clang_repo_suffix }} main"

      - name: Install build dependencies
        if: "${{ runner.os == 'Linux' }}"
        run: |-
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends \
            libncurses-dev \
            pkg-config

      - name: Install build dependency Clang ${{ matrix.clang_major_version }}
        if: "${{ runner.os == 'Linux' && contains(matrix.cxx, 'clang') }}"
        run: |-
          sudo apt-get install --yes --no-install-recommends -V \
              clang-${{ matrix.clang_major_version }}

      - name: Add versioned aliases for Clang ${{ matrix.clang_major_version }}
        if: "${{ runner.os == 'macOS' && contains(matrix.cxx, 'clang') }}"
        run: |-
          set -x
          sudo ln -s "$(brew --prefix llvm@${{ matrix.clang_major_version }})"/bin/clang   /usr/local/bin/clang-${{ matrix.clang_major_version }}
          sudo ln -s "$(brew --prefix llvm@${{ matrix.clang_major_version }})"/bin/clang++ /usr/local/bin/clang++-${{ matrix.clang_major_version }}

      - name: Checkout Git branch
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 'Build'
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |-
          CFLAGS='-std=gnu99 -pedantic -Werror' make all torture

      - name: 'Install'
        run: |-
          set -x -o pipefail
          make install DESTDIR="${PWD}"/ROOT/
          find ROOT/ | sort | xargs ls -ld

      - name: 'Uninstall'
        run: |-
          set -x
          make uninstall DESTDIR="${PWD}"/ROOT/
          [[ "$(find ROOT/ -not -type d | tee /dev/stderr)" == '' ]]  # i.e. fail CI if leftover files

      - name: 'Clean'
        run: |-
          set -x -o pipefail
          make clean
          [[ "$(git ls-files -o | tee /dev/stderr | wc -l)" -eq 0 ]]
